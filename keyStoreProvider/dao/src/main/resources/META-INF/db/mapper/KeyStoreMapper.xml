<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="github.bonapartedawn.mapper.KeyStoreMapper">
  <resultMap id="BaseResultMap" type="github.bonapartedawn.entity.KeyStore">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="businessID" jdbcType="BIGINT" property="businessID" />
    <result column="businessType" jdbcType="VARCHAR" property="businessType" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="timestamp" jdbcType="TIMESTAMP" property="timestamp" />
    <result column="expire" jdbcType="BIGINT" property="expire" />
    <result column="close" jdbcType="INTEGER" property="close" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, businessID, businessType, salt, password, timestamp, expire, close, remark
  </sql>
  <select id="selectByExample" parameterType="github.bonapartedawn.entity.KeyStoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from keystore
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from keystore
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from keystore
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="github.bonapartedawn.entity.KeyStoreExample">
    delete from keystore
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="github.bonapartedawn.entity.KeyStore">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into keystore (businessID, businessType, salt, 
      password, timestamp, expire, 
      close, remark)
    values (#{businessID,jdbcType=BIGINT}, #{businessType,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{timestamp,jdbcType=TIMESTAMP}, #{expire,jdbcType=BIGINT}, 
      #{close,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="github.bonapartedawn.entity.KeyStore">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into keystore
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="businessID != null">
        businessID,
      </if>
      <if test="businessType != null">
        businessType,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="timestamp != null">
        timestamp,
      </if>
      <if test="expire != null">
        expire,
      </if>
      <if test="close != null">
        close,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="businessID != null">
        #{businessID,jdbcType=BIGINT},
      </if>
      <if test="businessType != null">
        #{businessType,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="timestamp != null">
        #{timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="expire != null">
        #{expire,jdbcType=BIGINT},
      </if>
      <if test="close != null">
        #{close,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="github.bonapartedawn.entity.KeyStoreExample" resultType="java.lang.Long">
    select count(*) from keystore
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update keystore
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.businessID != null">
        businessID = #{record.businessID,jdbcType=BIGINT},
      </if>
      <if test="record.businessType != null">
        businessType = #{record.businessType,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.timestamp != null">
        timestamp = #{record.timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expire != null">
        expire = #{record.expire,jdbcType=BIGINT},
      </if>
      <if test="record.close != null">
        close = #{record.close,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update keystore
    set id = #{record.id,jdbcType=BIGINT},
      businessID = #{record.businessID,jdbcType=BIGINT},
      businessType = #{record.businessType,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      timestamp = #{record.timestamp,jdbcType=TIMESTAMP},
      expire = #{record.expire,jdbcType=BIGINT},
      close = #{record.close,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="github.bonapartedawn.entity.KeyStore">
    update keystore
    <set>
      <if test="businessID != null">
        businessID = #{businessID,jdbcType=BIGINT},
      </if>
      <if test="businessType != null">
        businessType = #{businessType,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="timestamp != null">
        timestamp = #{timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="expire != null">
        expire = #{expire,jdbcType=BIGINT},
      </if>
      <if test="close != null">
        close = #{close,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="github.bonapartedawn.entity.KeyStore">
    update keystore
    set businessID = #{businessID,jdbcType=BIGINT},
      businessType = #{businessType,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      timestamp = #{timestamp,jdbcType=TIMESTAMP},
      expire = #{expire,jdbcType=BIGINT},
      close = #{close,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>